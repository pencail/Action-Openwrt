name: 测试2

on:
  workflow_dispatch:
    inputs:
      target:
        description: '选择版本'
        required: true
        default: 'openwrt_23.05.5'

env:
  GITHUB_LINK: https://github.com/${{github.repository}}
  GIT_REPOSITORY: ${{github.repository}}
  UPLOAD_BIN_DIR: true                         #上传 bin 目录。即包含所有 ipk 文件和固件的目录。默认false
  UPLOAD_FIRMWARE: true                         #上传固件目录。默认true
  UPLOAD_RELEASE: true                         #上传固件到 releases 。默认false
  UPLOAD_TRANSFER: false                        #奶牛快传和wetransfer快传

  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-24.04
    
    #赋予写入权限
    permissions:
      contents: write

    #选择系统版本
    name: 编译${{github.event.inputs.target}}
    strategy:
      fail-fast: true                      # true：只要流程中有失败，自动停止所有流程

        
    steps:
    - name: 拉取仓库
      uses: actions/checkout@main
    
    - name: 输出
      run: |
        echo ${{github.event.inputs.target}}
        echo ${{matrix.target}}

        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 拉取仓库
      uses: actions/checkout@main

    - name: 检测脚本设置
      run: |
        source "${GITHUB_WORKSPACE}/build/${{github.event.inputs.target}}/settings.ini"

        echo "REPO_URL=${REPO_URL}" >> ${GITHUB_ENV}
        echo "REPO_BRANCH=${REPO_BRANCH}" >> ${GITHUB_ENV}
        echo "CONFIG_FILE=${CONFIG_FILE}" >> ${GITHUB_ENV}
        echo "FEEDS_CONF=${FEEDS_CONF}" >> ${GITHUB_ENV}
        echo "DIY_P1_SH=${DIY_P1_SH}" >> ${GITHUB_ENV}
        echo "DIY_P2_SH=${DIY_P2_SH}" >> ${GITHUB_ENV}

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载内核MD5文件
      run: |
        if [ -n "$(ls -A "build/${{github.event.inputs.target}}/md5.vermagic" 2>/dev/null)" ]; then
          cp -Rf $GITHUB_WORKSPACE/build/${{github.event.inputs.target}}/md5.vermagic openwrt/.vermagic
        fi

        cd openwrt
        ls -a
        echo "..........."
        cat .vermagic
        
    - name: 加载配置文件(config)，同时运行part2脚本
      run: |
        cp build/${{github.event.inputs.target}}/$CONFIG_FILE openwrt/.config
        chmod +x build/${{github.event.inputs.target}}/$DIY_P2_SH    
        cd openwrt
        /bin/bash "$GITHUB_WORKSPACE/build/${{github.event.inputs.target}}/$DIY_P2_SH"

    - name: 查看1
      run: |
        cd openwrt
        sed -i '130s#.*#\tcp $(TOPDIR)/.vermagic $(LINUX_DIR)/.vermagic#g' include/kernel-defaults.mk
        ls -a
        echo "........"
        cd include
        ls -a
        echo "........"
        sed -i '130s#.*#\tcp $(TOPDIR)/.vermagic $(LINUX_DIR)/.vermagic#g' kernel-defaults.mk
        cat kernel-defaults.mk
        echo "........."

    - name: 查看2
      run: |
        cd openwrt
        echo "```"
        cat package/kernel/linux/Makefile
        echo "```"
